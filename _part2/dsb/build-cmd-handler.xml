<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build-project">
	<!-- init -->
	<target name="init">

		<echo>+-------------------------------------------------------+</echo>
		<echo>| Initialization |</echo>
		<echo>| command: ${cmd} |</echo>
		<echo>| package: ${package} |</echo>
		<echo>+-------------------------------------------------------+</echo>

		<tstamp>
			<format property="build.time" pattern="MM/dd/yyyy hh:mm aa" />
		</tstamp>

		<property file="build.properties" />

		<property name="project.root.dir" value="." />
		<property name="project.lib.dir" value="${project.root.dir}/lib" />
		<property name="project.src.dir" value="${project.root.dir}/src/java" />
		<property name="project.build.dir" value="${project.root.dir}/build" />
		<property name="project.META-INF.dir" value="${project.root.dir}/META-INF" />
		<property name="project.deploy.dir" value="${project.root.dir}/deploy" />
		<property name="project.resource.dir" value="${project.root.dir}/resource" />

		<available property="cmd.resource.exists" file="${project.resource.dir}/${cmd}" />

		<path id="extern-jar">
			<fileset dir="${project.root.dir}/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${project.deploy.dir}/libs">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${project.deploy.dir}/services/">
				<include name="*.jar" />
			</fileset>
		</path>
	</target>

	<!-- clean -->
	<target name="clean" depends="init">
		<echo>+-------------------------------------------------------+</echo>
		<echo>| Clean temp folders |</echo>
		<echo>+-------------------------------------------------------+</echo>
		<delete dir="${project.build.dir}" verbose="yes" />
		<mkdir dir="${project.build.dir}" />
	</target>

	<!-- clean-project-->
	<target name="clean-project" depends="init,clean">
	</target>

	<!-- complie project-->
	<target name="compile-project" depends="init" if="package">
		<echo>+-------------------------------------------------------+</echo>
		<echo>| Compling java source files for ${cmd} |</echo>
		<echo>+-------------------------------------------------------+</echo>

		<javac destdir="${project.build.dir}" debug="on" encoding="UTF-8" deprecation="on" includejavaruntime="yes" includeantruntime="no">
			<src path="${project.src.dir}/${package}" />
			<include name="**/*.java" />
			<classpath>
				<path refid="extern-jar" />
				<pathelement location="${project.build.dir}" />
			</classpath>
		</javac>
	</target>

	<target name="compile-resource" if="cmd.resource.exists" depends="init">
		<echo>+---------------------------------------------------+</echo>
		<echo>| Compling i18n properties files for ${cmd} |</echo>
		<echo>+---------------------------------------------------+</echo>
		<native2ascii encoding="UTF-8" src="${project.resource.dir}/${cmd}" dest="${project.build.dir}/resource/${cmd}/i18n">
			<include name="**/*.properties" />
		</native2ascii>
	</target>

	<!-- jar project-->
	<target name="jar-project" depends="init">
		<echo>+-------------------------------------------------------+</echo>
		<echo>| Archive project for ${cmd} |</echo>
		<echo>+-------------------------------------------------------+</echo>
		<jar jarfile="${project.deploy.dir}/cmdhandlers/default/${cmd}-${project.version}.jar">
			<fileset dir="${project.build.dir}" includes="**" />
			<!--fileset dir="${project.src.dir}" includes="**/*.java" /-->
		</jar>
	</target>

	<target name="build-project" depends="clean-project,compile-project,compile-resource,jar-project" />
</project>