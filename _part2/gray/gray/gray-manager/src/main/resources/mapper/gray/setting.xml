<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xlz.gray.mapper.SettingMapper">
	
	<sql id="columnListWithoutId" >
		category,
		setting_type,
		setting_param,
		setting_value,
		remark,
		status,
		create_time,
		create_user,
		update_time,
		update_user,
		modfiy
	</sql>
	
	<sql id="columnList" >
	    id , <include refid="columnListWithoutId" />
	</sql>
	
	<resultMap type="com.xlz.gray.model.Setting" id="result">
		<result column="id" property="id"/>
		<result column="category" property="category"/>
		<result column="setting_type" property="settingType"/>
		<result column="setting_param" property="settingParam"/>
		<result column="setting_value" property="settingValue"/>
		<result column="remark" property="remark"/>
		<result column="status" property="status"/>
		<result column="create_time" property="createTime"/>
		<result column="create_user" property="createUser"/>
		<result column="update_time" property="updateTime"/>
		<result column="update_user" property="updateUser"/>
		<result column="modfiy" property="modfiy"/>
	</resultMap>
	
	<insert id="save" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
		insert into gray_setting (	
			id,
			category,
			setting_type,
			setting_param,
			setting_value,
			remark,
			status,
			create_time,
			create_user,
			update_time,
			update_user,
			modfiy
			)
		values(
			#{id},
			#{category},
			#{settingType},
			#{settingParam},
			#{settingValue},
			#{remark},
			#{status},
			#{createTime},
			#{createUser},
			#{updateTime},
			#{updateUser},
			#{modfiy}
		)
	</insert>
	
	<update id="update">
		update 
			gray_setting
		<set>
			<if test="category != null">
				category=#{category},
			</if>
			<if test="settingType != null">
				setting_type=#{settingType},
			</if>
			<if test="settingParam != null">
				setting_param=#{settingParam},
			</if>
			<if test="settingValue != null">
				setting_value=#{settingValue},
			</if>
			<if test="remark != null">
				remark=#{remark},
			</if>
			<if test="status != null">
				status=#{status},
			</if>
			<if test="createTime != null">
				create_time=#{createTime},
			</if>
			<if test="createUser != null">
				create_user=#{createUser},
			</if>
			<if test="updateTime != null">
				update_time=#{updateTime},
			</if>
			<if test="updateUser != null">
				update_user=#{updateUser},
			</if>
			<if test="modfiy != null">
				modfiy=#{modfiy},
			</if>
		</set>
		where 
			id = #{id}
	</update>
	
	<delete id="delete">
		delete from 
			gray_setting 
		where 
			id = #{id}
	</delete>
	
	<select id="findById" resultMap="result">
		select 
			<include refid="columnList" />
		from 
			gray_setting 
		where 
			id = #{id}
	</select>
	
	<select id="findAll" resultMap="result">
		select 
			<include refid="columnList" />
		from 
			gray_setting  
		<include refid="Common.parseFilterRules"/>
		order by id asc
	</select>
	
	<select id="getTotalCount" resultType="int">
        select count(*)
        from 
        	gray_setting
        <include refid="Common.parseFilterRules"/>
    </select>
    
	<select id="findByPage" resultMap="result">
		select 
			<include refid="columnList" />
		from 
			gray_setting 
		<include refid="Common.parseFilterRules"/>
		order by ${pageQuery.sort} ${pageQuery.order}
		limit #{pageQuery.start} , #{pageQuery.pageSize}
	</select>
</mapper>