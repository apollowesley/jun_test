<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xlz.gray.mapper.ApplicationCmdMapper">
	
	<sql id="columnListWithoutId" >
		gray_cmd,
		application_code,
		version,
		status,
		create_time,
		create_user,
		update_time,
		update_user
	</sql>
	
	<sql id="columnList" >
	    id , <include refid="columnListWithoutId" />
	</sql>
	
	<resultMap type="com.xlz.gray.model.ApplicationCmd" id="result">
		<result column="id" property="id"/>
		<result column="gray_cmd" property="grayCmd"/>
		<result column="application_code" property="applicationCode"/>
		<result column="version" property="version"/>
		<result column="status" property="status"/>
		<result column="create_time" property="createTime"/>
		<result column="create_user" property="createUser"/>
		<result column="update_time" property="updateTime"/>
		<result column="update_user" property="updateUser"/>
	</resultMap>
	
	<insert id="save" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
		insert into gray_application_cmd (	
			id,
			gray_cmd,
			application_code,
			version,
			status,
			create_time,
			create_user,
			update_time,
			update_user
			)
		values(
			#{id},
			#{grayCmd},
			#{applicationCode},
			#{version},
			1,
			now(),
			#{createUser},
			#{updateTime},
			#{updateUser}
	
		)
	</insert>
	
	<update id="update">
		update 
			gray_application_cmd
		<set>
			<if test="grayCmd != null">
				gray_cmd=#{grayCmd},
			</if>
			<if test="applicationCode != null">
				application_code=#{applicationCode},
			</if>
			<if test="version != null">
				version=#{version},
			</if>
			<if test="status != null">
				status=#{status},
			</if>
			<if test="createTime != null">
				create_time=#{createTime},
			</if>
			<if test="createUser != null">
				create_user=#{createUser},
			</if>
			<if test="updateTime != null">
				update_time=#{updateTime},
			</if>
			<if test="updateUser != null">
				update_user=#{updateUser},
			</if>
		</set>
		where 
			id = #{id}
	</update>
	
	<delete id="delete">
		delete from 
			gray_application_cmd 
		where 
			id = #{id}
	</delete>
	
	<select id="findById" resultMap="result">
		select 
			<include refid="columnList" />
		from 
			gray_application_cmd 
		where 
			id = #{id}
	</select>
	
	<select id="findAll" resultMap="result">
		select 
			<include refid="columnList" />
		from 
			gray_application_cmd  
		<include refid="Common.parseFilterRules"/>
	</select>
	
	<select id="getTotalCount" resultType="int">
        select count(*)
        from 
        	gray_application_cmd
        <include refid="Common.parseFilterRules"/>
    </select>
    
	<select id="findMaxVersion" resultType="int">
        select max(version)
        from 
        	gray_application_cmd
        where 
			application_code=#{applicationCode}
    </select>
    
	<select id="findByPage" resultMap="result">
		select 
			<include refid="columnList" />
		from 
			gray_application_cmd 
		<include refid="Common.parseFilterRules"/>
		order by ${pageQuery.sort} ${pageQuery.order}
		limit #{pageQuery.start} , #{pageQuery.pageSize}
	</select>
</mapper>