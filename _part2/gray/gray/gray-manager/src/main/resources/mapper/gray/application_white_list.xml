<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xlz.gray.mapper.ApplicationWhitelistMapper">
	
	<sql id="columnListWithoutId" >
		white_list_id,
		link_id,
		status,
		level
	</sql>
	
	<sql id="columnList" >
	    id , <include refid="columnListWithoutId" />
	</sql>
	
	<resultMap type="com.xlz.gray.model.ApplicationWhitelist" id="result">
		<result column="id" property="id"/>
		<result column="white_list_id" property="whiteListId"/>
		<result column="link_id" property="linkId"/>
		<result column="level" property="level"/>
		<result column="status" property="status"/>
	</resultMap>
	
	<insert id="save" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
		insert into gray_application_white_list (	
			id,
			white_list_id,
			link_id,
			status,
			level
			)
		values(
			#{id},
			#{whiteListId},
			#{linkId},
			#{status},
			#{level}
	
		)
	</insert>
	
	<update id="update">
		update 
			gray_application_white_list
		<set>
			<if test="whiteListId != null">
				white_list_id=#{whiteListId},
			</if>
			<if test="linkId != null">
				link_id=#{linkId},
			</if>
			<if test="level != null">
				level=#{level},
			</if>
			<if test="status != null">
				status=#{status},
			</if>
		</set>
		where 
			id = #{id}
	</update>
	
	<update id="delete">
		update 
			gray_application_white_list 
		set status=0
		where 
			1=1
			<if test="linkId == null">
				and white_list_id=#{id}
			</if>
			<if test="linkId != null">
				and id = #{id}
				and link_id=#{linkId}
			</if>
			<if test="level != null">
				and level=#{level}
			</if>
	</update>
	
	<select id="findById" resultMap="result">
		select 
			<include refid="columnList" />
		from 
			gray_application_white_list 
		where 
			id = #{id}
	</select>
	
	<select id="findAll" resultMap="result">
		select 
			<include refid="columnList" />
		from 
			gray_application_white_list  
		<include refid="Common.parseFilterRules"/>
	</select>
	
	<select id="getTotalCount" resultType="int">
        select count(*)
        from 
        	gray_application_white_list
        <include refid="Common.parseFilterRules"/>
    </select>
    
	<select id="findByPage" resultMap="result">
		select 
			<include refid="columnList" />
		from 
			gray_application_white_list 
		<include refid="Common.parseFilterRules"/>
		order by ${pageQuery.sort} ${pageQuery.order}
		limit #{pageQuery.start} , #{pageQuery.pageSize}
	</select>
</mapper>