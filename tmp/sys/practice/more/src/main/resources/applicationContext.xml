<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
     	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 采用注释的方式配置bean -->
	<context:annotation-config />
	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="com.pyy.service"></context:component-scan>

	<!--proxy-target-class="true"强制使用cglib代理 如果为false则spring会自动选择 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

    <!-- 配置dbcp数据源 -->
    <bean id="dbSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!-- 队列中的最小等待数 -->
        <property name="minIdle" value="5"></property>
        <!-- 队列中的最大等待数 -->
        <property name="maxIdle" value="5"></property>
        <!-- 最长等待时间，单位毫秒 -->
        <property name="maxWait" value="300000"></property>
        <!-- 最大活跃数 -->
        <property name="maxActive" value="10"></property>
        <property name="initialSize" value="5"></property>
        <property name="validationQuery" value="SELECT 1"></property>
        <property name="testWhileIdle" value="true"></property>
        <property name="testOnBorrow" value="false"></property>
        <property name="timeBetweenEvictionRunsMillis" value="30000"></property>
    </bean>
    
    <import resource="DataSource.xml" />
    
    <!-- <bean id ="dataSource" parent="dbSource">  
          <property name ="driverClassName" value= "com.mysql.jdbc.Driver"></property >  
          <property name ="url" 
          		value= "jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&amp;allowMultiQueries=true" ></property >  
          <property name ="username" value="root" />
          <property name ="password" value="123456" />  
   </bean> -->

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/pyy/dao/xml/*.xml"></property>
		<property name="plugins">
            <array>
                <bean class="com.pyy.mybatis.PageInterceptor"></bean>
            </array>
        </property>
        <property name="configurationProperties">
            <props>
                <prop key="dialect">mysql</prop>
                <prop key="pageSqlId">.*WithPage$</prop>
            </props>
        </property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 只要进行该配置 spring就能跟mybatis进行完美整合 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pyy.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>