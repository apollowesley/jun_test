package com.jfast.web.common.core.utils;import java.util.ArrayList;import java.util.List;import java.util.Map;/** * @author zengjintao * @create 2019/7/12 20:12 * @since 1.0 **/public class MapTreeUtils {    public static List<Map> buildTreeData(List<Map> dataList) {        List<Map> result = new ArrayList<>();        List<Map> parentList = getRoot(dataList);        for (Map tree : parentList) {            parserTree(dataList, tree);            result.add(tree);        }        return result;    }    public static List<Map> getChildrenTree(List<Map> dataList, int parentId) {        List<Map> childrenTree = new ArrayList();        dataList.forEach(data -> {            if ((Integer)data.get("parent_id") == parentId) {                childrenTree.add(data);            }        });        childrenTree.forEach(data -> {            parserTree(dataList, data);        });        return childrenTree;    }    private static void parserTree(List<Map> dataList, Map data) {        Integer id = (Integer) data.get("value");        if (ObjectUtils.isEmpty(id)) {            id = (Integer) data.get("id");        }        List<Map> children = getChildrenTree(dataList, id);        if (ObjectUtils.isNotEmpty(children)) {            data.put("children", children);        }    }    /**     * 获取顶级父类数据     * @param dataList     * @return     */    private static List<Map> getRoot(List<Map> dataList) {        List<Map> rootList = new ArrayList<>();        dataList.forEach(root -> {            if ((Integer)root.get("parent_id") == 0) {                rootList.add(root);            }        });        return rootList;    }}