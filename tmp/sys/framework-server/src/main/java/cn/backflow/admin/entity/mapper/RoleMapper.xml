<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Role">

  <resultMap id="RolePermissionMap" type="cn.backflow.admin.entity.RolePermission">
    <result property="id" column="id"/>
    <result property="roleId" column="role_id"/>
    <result property="permId" column="perm_id"/>
    <result property="perm" column="perm"/>
  </resultMap>

  <insert id="insertRolePermission" useGeneratedKeys="true">
    INSERT INTO t_role_permission (role_id, perm_id, perm) VALUES
    <foreach collection="list" item="item" separator=",">
      (#{item.roleId}, #{item.permId}, #{item.perm})
    </foreach>
  </insert>

  <delete id="deleteRolePermission">
    DELETE FROM t_role_permission
    <where>
      <if test="id neq null">AND id = #{id}</if>
      <if test="roleId neq null">AND role_id = #{roleId}</if>
      <if test="permId neq null">AND perm_id = #{permId}</if>
      <if test="perm neq null">AND perm = #{perm}</if>
    </where>
  </delete>

  <resultMap id="RoleMap" type="cn.backflow.admin.entity.Role">
    <result property="id" column="id"/>
    <result property="name" column="name"/>
    <result property="description" column="description"/>
    <result property="status" column="status"/>
  </resultMap>

  <!-- 用于select查询公用抽取的列 -->
  <sql id="Role.columns">
    id, name, description, status
  </sql>

  <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO t_role (
      name,
      description,
      status
    ) VALUES (
      #{name},
      #{description},
      #{status}
    )
  </insert>

  <insert id="insertUserRole" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO t_user_role (user_id, role_id) VALUES
    <foreach collection="roles" item="role" separator=",">
      (#{userId}, #{role} )
    </foreach>
  </insert>

  <update id="update">
    UPDATE t_role SET
      name = #{name},
      description = #{description},
      status = #{status}
    WHERE
      id = #{id}
  </update>

  <delete id="delete">
    DELETE FROM t_role WHERE id = #{id}
  </delete>

  <delete id="deleteBatch">
    DELETE FROM t_role WHERE id IN
    <foreach collection="collection" item="id" open="(" close=")" separator=",">#{id}</foreach>
  </delete>

  <delete id="deleteUserRoles">
    DELETE FROM t_user_role WHERE user_id = #{userId}
  </delete>

  <select id="getById" resultMap="RoleMap">
    SELECT
    <include refid="Role.columns"/>
    FROM t_role WHERE id = #{id}
  </select>

  <select id="findAll" resultMap="RoleMap">
    SELECT
    <include refid="Role.columns"/>
    FROM t_role
    <include refid="RoleDynamicWhere"/>
    ORDER BY id DESC
  </select>

  <select id="findPermission" resultType="string">
    SELECT perm FROM t_role_permission
    <where>
      <if test="roleId neq null">AND role_id = #{roleId}</if>
      <if test="userId neq null">AND role_id = (SELECT role_id FROM t_uesr WHERE id = #{userId})</if>
    </where>
  </select>

  <select id="findPermissionId" resultType="int">
    SELECT perm_id FROM t_role_permission
    <where>
      <if test="roleId neq null">AND role_id = #{roleId}</if>
      <if test="userId neq null">AND role_id = (SELECT role_id FROM t_uesr WHERE id = #{userId})</if>
    </where>
  </select>

  <sql id="RoleDynamicWhere">
    <where>
      <if test="name neq null">AND name LIKE CONCAT('%', #{name}, '%')</if>
      <if test="description neq null">AND description LIKE CONCAT('%', #{description}, '%')</if>
      <if test="status neq null">AND status = #{status}</if>
      <if test="status eq null">AND status = 1</if>
      <if test="userId neq null">AND id IN (
        SELECT role_id FROM t_user_role WHERE user_id = #{id}
        )
      </if>
    </where>
  </sql>

  <select id="paging" resultMap="RoleMap">
    SELECT
    <include refid="Role.columns"/>
    FROM t_role
    <include refid="RoleDynamicWhere"/>
    <if test="_sort_ neq null">
      ORDER BY ${_sort_}
    </if>
    <if test="_offset_ neq null">
      LIMIT ${_offset_}, ${_limit_}
    </if>
  </select>

  <select id="pagingCount" resultType="long">
    SELECT COUNT(id) FROM t_role
    <include refid="RoleDynamicWhere"/>
  </select>
</mapper>