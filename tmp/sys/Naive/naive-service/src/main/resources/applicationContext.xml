<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd"
  default-autowire="byName" default-lazy-init="true">

  <bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath*:jdbc.properties</value>
      </list>
    </property>
  </bean>

  <!-- 开启AOP监听 -->
  <aop:aspectj-autoproxy proxy-target-class="true" />
  <!-- 开启注解事务 <tx:annotation-driven transaction-manager="txManager"/> -->

  <!-- C3P0数据库连接池 -->
  <bean id="c3p0DS" class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close">
    <property name="driverClass" value="${c3p0.driver}" />
    <property name="jdbcUrl" value="${c3p0.url}" />
    <property name="user" value="${c3p0.username}" />
    <property name="password" value="${c3p0.password}" />
    <property name="minPoolSize" value="${c3p0.minPoolSize}" />
    <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
    <property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
    <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
    <property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
    <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
  </bean>

  <!-- Hibernate SessionFactory -->
  <bean id="sessionFactory"
    class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="c3p0DS" />
    <property name="packagesToScan">
      <list>
        <value>org.duomn.**.entity</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
        <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
        <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
        <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
        <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}
        </prop>

        <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
        <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
        <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
        <prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}
        </prop>
        <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>
      </props>
    </property>
  </bean>
  <!-- Hibernate的事务管理 -->
  <bean id="hibernateTx"
    class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  <!-- Hibernate的AOP配置 -->
  <tx:advice id="hibernateTxAdvice" transaction-manager="hibernateTx">
    <tx:attributes>
      <tx:method name="save*" propagation="REQUIRED" />
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="create*" propagation="REQUIRED" />
      <tx:method name="insert*" propagation="REQUIRED" />
      <tx:method name="update*" propagation="REQUIRED" />
      <tx:method name="merge*" propagation="REQUIRED" />
      <tx:method name="del*" propagation="REQUIRED" />
      <tx:method name="remove*" propagation="REQUIRED" />
      <tx:method name="put*" propagation="REQUIRED" />
      <tx:method name="use*" propagation="REQUIRED" />
      <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
      <tx:method name="get*" propagation="REQUIRED" read-only="true" />
      <tx:method name="count*" propagation="REQUIRED"
        read-only="true" />
      <tx:method name="find*" propagation="REQUIRED"
        read-only="true" />
      <tx:method name="list*" propagation="REQUIRED"
        read-only="true" />
      <tx:method name="*" read-only="true" />
    </tx:attributes>
  </tx:advice>
  <aop:config expose-proxy="true">
    <!-- 只对业务逻辑层实施事务 -->
    <aop:pointcut id="txPointcut"
      expression="execution(* org.duomn..service..*.*(..))" />
    <aop:advisor advice-ref="hibernateTxAdvice"
      pointcut-ref="txPointcut" />
  </aop:config>


  <context:annotation-config />
  <context:component-scan base-package="org.**.dao" />
  <context:component-scan base-package="org.**.service" />

  <bean class="org.duomn.naive.common.util.SpringContextHolder"
    lazy-init="false" />

  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- 文件最大的大小为1G=1024*1024*1024(byte) -->
    <property name="maxUploadSize" value="1073741824" />
    <!-- 内存中最大10M=10*1024*1024(byte) -->
    <property name="maxInMemorySize" value="10240"/> 
  </bean>


</beans>