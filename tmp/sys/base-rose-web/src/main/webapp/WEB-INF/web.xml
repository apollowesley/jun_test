<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

    <display-name>base-mvc-web</display-name>

    <!-- log4j 日志配置 start -->
    <!--<listener>-->
    <!--
        - 这个就是Log4jConfigListener配置，它可以读取上面配置的log4jConfigLocation等信息，
        - 配置Log4J信息以及进行webapp根地址的暴露(暴露使其成为一个System属性，请搜索
        - log4jExposeWebAppRoot了解相关说明)
    -->
    <!--<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>-->
    <!--</listener>-->

    <!--<context-param>-->
    <!--<param-name>log4jRefreshInterval</param-name>-->
    <!--<param-value>60000</param-value>-->
    <!--</context-param>-->

    <!--<context-param>-->
    <!--<param-name>webAppRootKey</param-name>-->
    <!--<param-value>cleaner-api.root</param-value>-->
    <!--</context-param>-->

    <!--<context-param>-->
    <!--<param-name>log4jConfigLocation</param-name>-->
    <!--<param-value>/WEB-INF/log4j.xml</param-value>-->
    <!--</context-param>-->
    <!-- log4j 日志配置 end -->

    <!-- logback 日志配置 start -->
    <!--
        - Rose内部使用apache的commons-logging作为日志输出接口，故Rose并没有强制使用log4j。
        - 但实践上您可能会选择使用log4j，如果如此的话您可以在web.xml配置以下内容，同时按照下面的说明，配置log4j.xml
        - 这个参数告诉Log4jConfigListener Log4J的属性文件位置。
        - 在开发、测试环境下，建议把net.paoding和org.springframework配置成DEBUG模式。
        <context-param>
            <param-name>log4jConfigLocation</param-name>
            <param-value>classpath:log4j.xml</param-value>
        </context-param>
    -->
    <context-param>
        <param-name>logbackConfigLocation</param-name>
        <param-value>classpath:logback.xml</param-value>
    </context-param>

    <!--
        - 这个就是Log4jConfigListener配置，它可以读取上面配置的log4jConfigLocation等信息，
        - 配置Log4J信息以及进行webapp根地址的暴露(暴露使其成为一个System属性，请搜索
        - log4jExposeWebAppRoot了解相关说明)
        <listener>
            <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
        </listener>
    -->
    <listener>
        <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
    </listener>
    <!-- logback 日志配置 end -->

    <!--
        - 如果没有配置以下参数，默认portalExecutorCorePoolSize取1，相当于除了http主线程外只有另外1个执行线程，
        - 这对程序的正确性没有任何影响，只是并发能力下降了，整个portal的执行时间也会变长。
    -->
    <context-param>
        <param-name>portalExecutorCorePoolSize</param-name>
        <param-value>1024</param-value>
    </context-param>

    <!--
        - RoseFilter是Rose的最主要配置,也是Rose框架本身的唯一配置了，大多少情况下，按照Rose提供web.xml中配置方式拷贝过来即可，不需要修改。
        - 默认情况下RoseFilter会过滤所有的请求，对请求进行识别，对应该由Controller处理的进行分派，不应该由Controller
        - 处理的则让它简单通过，通往它该去的地方。
        - 这里最重要的2点就是：
        -    1)要保持dispatcher含有FORWARD，INCLUDE;
        -    2)要保证filter-mapping是所有filter-mapping的最后一个
    -->
    <filter>
        <filter-name>roseFilter</filter-name>
        <filter-class>net.paoding.rose.RoseFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>roseFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <!-- 设置session超时时间，单位：分钟 -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
    </welcome-file-list>
</web-app>