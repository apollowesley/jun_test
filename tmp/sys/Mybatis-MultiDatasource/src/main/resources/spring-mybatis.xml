<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 载入属性文件  -->
<!--
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                &lt;!&ndash; 不需要区分环境的,指向的是被Maven已编译的资源文件 &ndash;&gt;
                <value>classpath*:datasource-mysql.properties</value>
                <value>classpath*:datasource-oracle.properties</value>
            </list>
        </property>
    </bean>
-->

    <!--0.数据库厂商配置-->
    <bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="SQL Server">sqlserver</prop>
                <prop key="DB2">db2</prop>
                <prop key="Oracle">oracle</prop>
                <prop key="MySQL">mysql</prop>
            </props>
        </property>
    </bean>
    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties" ref="vendorProperties"/>
    </bean>
    <!-- 1.数据源配置-->
    <import resource="spring-datasource.xml"></import>
    <bean id="multipleDataSource" class="cn.kiwipeach.demo.datasource.CustomMultipleDataSource">
        <!--默认数据源-->
        <property name="defaultTargetDataSource" ref="mysqlDataSource"/>
        <!--可支持数据源-->
        <property name="targetDataSources">
            <map>
                <entry key="mysqlDataSource" value-ref="mysqlDataSource"/>
                <entry key="oracleDataSource" value-ref="oracleDataSource"/>
            </map>
        </property>
    </bean>

    <!--2.SqlSessionFactoryBean配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="multipleDataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath:mappings/**/*.xml</value>
            </list>
        </property>
        <!-- 数据库id标识 -->
        <property name="databaseIdProvider" ref="databaseIdProvider"></property>
        <!-- 注册类型 -->
        <property name="typeAliasesPackage" value="cn.kiwipeach.**.modal"></property>
    </bean>

    <!--3.Mapper扫描配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.kiwipeach.demo.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!--4.事务管理器配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="multipleDataSource"/>
    </bean>

    <!-- 5.使用声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


</beans>