第一步. 首先建立Hello项目同时建立Maven约定的目录结构

Hello
 --src
 -----main
 ----------java
 ----------resources
 -----test
 ---------java
 ---------resources
 --pom.xml

第二步：在项目Hello根目录建立pom.xml


<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.itcast.maven</groupId>
  <artifactId>Hello</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Hello</name>
  
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>		
		
	</dependencies>
</project>

第三步：在src/main/java/cn/itcast/maven目录下新建文件Hello.java


package cn.itcast.maven;

public class Hello {
	
	public String sayHello(String name){
	
		return "Hello "+name+"!";
	
	}
	
}

第四步：在/src/test/java/cn/itcast/maven目录下新建测试文件HelloTest.java

package cn.itcast.maven;

import org.junit.Test;
import static junit.framework.Assert.*;

public class HelloTest {

	@Test
	public void testHello(){
		
		Hello hello = new Hello();
		String results = hello.sayHello("litingwei");
		assertEquals("Hello litingwei!",results);		

	}
	
}

第五步：

a)打开cmd命令行，进入Hello项目根目录执行 mvn compile命令，查看根目录变化
b)cmd 中继续录入mvn clean命令，然后再次查看根目录变化
c)cmd 中录入 mvn clean compile命令, 查看根目录变化
d)cmd 中录入 mvn clean test命令，查看根目录变化
e)cmd 中录入 mvn clean package命令,查看根目录变化