<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.liuburu.demo</groupId>
    <artifactId>maven-modal-parent</artifactId>
    <packaging>pom</packaging>
    <version>3.0.0-SNAPSHOT</version>
    <!--1.统筹所有模块-->
    <modules>
        <module>maven-modal-doc</module>
        <module>maven-modal-core</module>
        <module>maven-modal-3rd</module>
        <module>maven-modal-service01</module>
    </modules>
    <!--2.配置此Maven项目模块的总体信息-->
    <properties>
        <!--本项目版本-->
        <maven.project.version>3.0.0-SNAPSHOT</maven.project.version>
        <maven.service01.version>3.0.0-SNAPSHOT</maven.service01.version>
        <!--Maven参数依赖-->
        <jdk.version>1.8</jdk.version><!--jdk版本-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--编译字符集-->
        <repository.public.url>
            http://maven.aliyun.com/nexus/content/groups/public/
        </repository.public.url>
        <repository.releases.url>
            <!--http://192.168.56.114:8081/nexus/content/repositories/releases/-->
            http://maven.aliyun.com/nexus/content/repositories/releases/
        </repository.releases.url>
        <repository.snapshot.url>
            <!--http://192.168.56.114:8081/nexus/content/repositories/snapshots/-->
            http://maven.aliyun.com/nexus/content/repositories/snapshots/
        </repository.snapshot.url>
        <!--Maven插件版本依赖-->
        <clean.plugin.verson>3.0.0</clean.plugin.verson>
        <source.plugin.verson>3.0.1</source.plugin.verson>
        <compiler.plugin.verson>3.5.1</compiler.plugin.verson>
        <surefire.plugin.version>2.18.1</surefire.plugin.version>
        <install.plugin.verson>2.5.2</install.plugin.verson>

        <!--项目公共依赖（日志，测试，转换，工具类）-->
        <fastjson.version>1.2.12</fastjson.version>
        <junit.version>4.12</junit.version>
        <sl4j.version>1.7.12</sl4j.version>
        <logback.version>1.1.7</logback.version>
        <!--持久层Mybatis依赖-->
        <ojdbc.version>11.2.0.3</ojdbc.version>
        <mysql.version>5.1.39</mysql.version>
        <druid.version>1.0.18</druid.version>
        <mybatis.version>3.2.8</mybatis.version>
        <mybatis.spring.version>1.3.0</mybatis.spring.version>
        <!--Web相关依赖-->
        <servlet.version>3.1.0</servlet.version>
        <jstl.version>1.2</jstl.version>
        <tglib.version>1.1.2</tglib.version>
        <!--spring依赖和springMVC相关依赖-->
        <spring.version>4.3.3.RELEASE</spring.version>
        <jackson.version>2.8.1</jackson.version>
        <!--缓存相关-->
        <redis.version>2.7.3</redis.version>
        <protostuff.version>1.0.8</protostuff.version>
    </properties>
    <!--所有模块通用行依赖-->
    <dependencies>
        <!--测试依赖-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version><!--普通单元测试-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version><!--spring单元测试-->
            <scope>test</scope>
        </dependency>
        <!--日志依赖-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId><!--日志标准接口-->
            <version>${sl4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version><!--日志实现类-->
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version><!--日志适配包-->
        </dependency>

        <!--fastjson json解析依赖-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version><!--阿里数据源-->
        </dependency>

    </dependencies>

    <!--所有模块依赖的仓库-->
    <dependencyManagement>
        <dependencies>
            <!--持久层访问依赖-->
            <dependency>
                <groupId>cn.oracle.buruliu</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${ojdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version><!--druid数据源-->
            </dependency>
            <!-- <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>6.0.3</version> </dependency> -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version><!--mybatis依赖-->
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis.spring.version}</version><!--mybatis-spring整合-->
            </dependency>
            <!--Spring相关公共依赖-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version><!--核心依赖-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version><!--Bean组件-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version><!--静态文件加载相关-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version><!--事务依赖-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version><!--jdbc-->
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--阿里云仓库-->
    <repositories>
        <repository>
            <id>alimaven</id>
            <name>aliyun maven</name>
            <url>${repository.public.url}</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <name>buruliu的正式库</name>
            <url>${repository.releases.url}</url>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>buruliu的快照库</name>
            <url>${repository.snapshot.url}</url>
        </snapshotRepository>
    </distributionManagement>
    <pluginRepositories>
        <pluginRepository>
            <id>ylzinfo-public</id>
            <name>buruliu的正式库</name>
            <url>http://192.168.22.97:8081/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!--开发环境-->
    <profiles>
        <!-- 本地开发环境(development) -->
        <profile>
            <id>development</id>
            <properties>
                <profiles.active>development</profiles.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 正式生产环境(production) -->
        <profile>
            <id>production</id>
            <properties>
                <profiles.active>production</profiles.active>
            </properties>
        </profile>
    </profiles>
    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>profiles/**</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources/profiles/${profiles.active}</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${clean.plugin.verson}</version>                <!--编译插件-->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${source.plugin.verson}</version>               <!--resource资源打包插件-->
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.plugin.verson}</version>                <!--编译插件-->
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.plugin.version}</version>               <!--测试代码编译插件-->
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${install.plugin.verson}</version>                 <!--安装插件-->
            </plugin>
        </plugins>
    </build>

    <developers>
        <developer>
            <name>liuburu</name>
            <email>liuburu@outlook.com</email>
            <timezone>8</timezone>
        </developer>
    </developers>
    <description>
        此模块的有如下几种功能
        1.统筹所有的模块的Jar包依赖和Plugin插件依赖
        2.统一所有资源输出路径，Maven的各种开发环境
    </description>
</project>