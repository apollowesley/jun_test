<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
    	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	<context:component-scan base-package="com.mini"/>
	
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" >
	    <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
	    <property name="driverClassName" value="${jdbc.driver}" />
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${jdbc.database}" />
	    <property name="username" value="${jdbc.user}" />
	    <property name="password" value="${jdbc.password}" />
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="3" />
	    <property name="minIdle" value="3" />
	    <property name="maxActive" value="20" />
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="60000" />
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	    <!-- <property name="validationQuery" value="SELECT 'x' from dual" /> -->
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）-->
	    <!--<property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
	    <!-- 配置监控统计拦截的filters -->
	    <property name="filters" value="stat" />
	</bean>
	
	<bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource" >
	    <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
	    <property name="driverClassName" value="${jdbc.driver}" />
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="jdbc:mysql://localhost/test1?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull" />
	    <property name="username" value="${jdbc.user}" />
	    <property name="password" value="${jdbc.password}" />
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="3" />
	    <property name="minIdle" value="3" />
	    <property name="maxActive" value="20" />
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="60000" />
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	    <!-- <property name="validationQuery" value="SELECT 'x' from dual" /> -->
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）-->
	    <!--<property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
	    <!-- 配置监控统计拦截的filters -->
	    <property name="filters" value="stat" />
	</bean>
	
	 <bean id="dynamicDataSource" class="com.mini.core.dynamic.DynamicDataSource">
		<property name="defaultTargetDataSource" ref="dataSource"></property>
		<property name="targetDataSources">
	        <map key-type="java.lang.String">
	            <entry key="key1" value-ref="dataSource" />
	            <entry key="key2" value-ref="dataSource2" />
	        </map>
	    </property>
	</bean>
	
	<bean id="miniDao" class="com.mini.core.dao.MiniDao">
		<property name="dynamicDataSource" ref="dynamicDataSource"></property>
	</bean>
	
	<!-- 配置事务管理器 -->  
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
      <property name="dataSource" ref="dynamicDataSource"/>  
    </bean>  
      
    <!-- 采用@Transactional注解方式使用事务   -->  
    <tx:annotation-driven transaction-manager="txManager"/> 
    
    
	<!-- 激活自动代理功能 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/>
	<aop:config>
	  <aop:aspect id="myAop" ref="check">
	    <aop:pointcut id="target" expression="execution(* set*(..))"/>
	    <aop:after method="doing" pointcut-ref="a"/>
	  </aop:aspect>
	</aop:config> -->
</beans>