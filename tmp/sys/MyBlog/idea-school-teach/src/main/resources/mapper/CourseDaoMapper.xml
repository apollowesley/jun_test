<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sise.school.teach.bussiness.course.dao.CourseDao">
    <resultMap id="BaseResultMap" type="com.sise.school.teach.bussiness.course.po.CoursePO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="CHAR"/>
        <result column="type" property="type" jdbcType="CHAR"/>
        <result column="course_code" property="courseCode" jdbcType="CHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="author" property="author" jdbcType="CHAR"/>
        <result column="special_id" property="specialId" jdbcType="INTEGER"/>
        <result column="love_nums" property="loveNums" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, title, type, course_code, status, author, special_id, love_nums, create_time, update_time
    </sql>
    <insert id="insert" parameterType="com.sise.school.teach.bussiness.course.po.CoursePO">
    insert into t_course (id, title, type, course_code,
       status, author,special_id, love_nums,
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=CHAR}, #{type,jdbcType=CHAR}, #{courseCode,jdbcType=CHAR},
      #{status,jdbcType=TINYINT}, #{author,jdbcType=CHAR}, #{specialId,jdbcType=INTEGER},
      #{loveNums,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <select id="selectAllByStatus" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM t_course WHERE status=#{status}
    </select>

    <select id="countAllByName" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT count(*) FROM t_course WHERE name=#{name}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM t_course
    </select>

    <select id="selectAllBySpecialIdInPage" resultMap="BaseResultMap"
            parameterType="com.sise.school.teach.bussiness.course.po.CoursePO">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM t_course
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="specialId != null">
                and special_id=#{specialId}
            </if>
            <if test="title != null">
                and title=#{title}
            </if>
            <if test="author !=null">
                and author=#{author}
            </if>
        </trim>
    </select>
    <select id="selectAllBySpecialId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM t_course
        WHERE special_id=#{specialId} AND status=3
    </select>

    <select id="selectAllInId" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT * FROM t_course
        WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <delete id="delete" parameterType="java.lang.String">
        DELETE FROM t_course
        WHERE id=#{id}
    </delete>

    <update id="updateStatus" parameterType="java.lang.Integer">
        UPDATE t_course SET
        status=#{status} WHERE id=#{id}
    </update>

    <update id="update" parameterType="com.sise.school.teach.bussiness.course.po.CoursePO">
      UPDATE t_course SET
      title=#{title},author=#{author},update_time=#{updateTime} WHERE course_code=#{courseCode}
    </update>

    <update id="updateCourseStatusByCode">
        UPDATE t_course SET
        status=#{status} WHERE course_code=#{courseCode};
    </update>
</mapper>