#!/bin/sh

# 创建用户
groupadd mysql  -g 27
useradd -g mysql mysql  -u 27 -s /bin/false
groupadd www  -g 600
useradd -g www www  -u 600 -s /bin/false

# 创建目录
mkdir -p /opt/app/src
mkdir -p /opt/app/pcre
mkdir -p /data/mysql
mkdir -p /var/lib/mysql
mkdir -p /opt/app/mysql
chown -R mysql:mysql /data/mysql

mkdir -p /tmp/tcmalloc
mkdir -p /opt/app/php5
mkdir -p /opt/app/nginx/conf/vhost
mkdir -p /tmp/phpsession
chown -R 777 /tmp/phpsession

# iptables设置
echo -e "# Generated by iptables-save v1.3.5 on Mon Aug 13 12:46:06 2012\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n:RH-Firewall-1-INPUT - [0:0]\n-A INPUT -j RH-Firewall-1-INPUT\n-A FORWARD -j RH-Firewall-1-INPUT\n-A RH-Firewall-1-INPUT -i lo -j ACCEPT\n-A RH-Firewall-1-INPUT -p icmp -m icmp --icmp-type any -j ACCEPT\n-A RH-Firewall-1-INPUT -p esp -j ACCEPT\n-A RH-Firewall-1-INPUT -p ah -j ACCEPT\n-A RH-Firewall-1-INPUT -d 224.0.0.251 -p udp -m udp --dport 5353 -j ACCEPT\n-A RH-Firewall-1-INPUT -p udp -m udp --dport 631 -j ACCEPT\n-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 631 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n-A RH-Firewall-1-INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n-A RH-Firewall-1-INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT\n-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp-host-prohibited\nCOMMIT\n# Completed on Mon Aug 13 12:46:06 2012\n" > /etc/sysconfig/iptables
service iptables restart

# 系统设置(selinux)
#echo -e "#SELINUX=enforcing\n#SELINUXTYPE=targeted\nSELINUX=disabled\nSETLOCALDEFS=0" > /etc/selinux/config

# 一键安装脚本的 依赖包
yum install -y make  autoconf automake curl curl-devel gcc gcc-c++ zlib-devel openssl openssl-devel pcre-devel keyutils perl compat-glibc compat-glibc-headers  cpp glibc libgomp libstdc++-devel keyutils-libs-devel libsepol-devel libselinux-devel krb5-devel gd freetype freetype-devel fontconfig fontconfig-devel  libjpeg libjpeg-devel libpng libpng-devel gettext gettext-devel ncurses ncurses-devel libtool libtool-ltdl libtool-ltdl-devel libxml2 libxml2-devel patch policycoreutils bison gmp gmp-devel

# 将所有软件包复制到源文件src目录
cp -r Packages/* /opt/app/src

# 安装libmcrypt [php的依赖软件]
cd /opt/app/src
tar zxf libmcrypt-2.5.8.tar.gz
cd libmcrypt-2.5.8
./configure
make
make install
cd ..
rm -rf libmcrypt-2.5.8

# 安装cmake  [mysql 5.5以上的安装编译工具]
cd /opt/app/src
tar zxf cmake-2.8.10.tar.gz
cd cmake-2.8.10
./configure
make
make install
cd ..
rm -rf cmake-2.8.10

# 安装libunwind [TCMalloc的依赖包,安装gperftools时需要]
cd /opt/app/src
tar zxf libunwind-1.1.tar.gz
cd libunwind-1.1
./configure
make
make install
cd ..
rm -rf libunwind-1.1


# 安装gperftools [google开发的，gperftools对nginx与mysql进行内存管理、性能优化、降低负载]
cd /opt/app/src
tar zxf gperftools-2.0.tar.gz
cd gperftools-2.0
./configure --enable-frame-pointers
make
make install
cd ..
rm -rf gperftools-2.0

# 使系统加载库文件
echo -e "/usr/local/lib" > /etc/ld.so.conf.d/usr_local_lib.conf
/sbin/ldconfig

# 安装mysql 5.6
cd /opt/app/src
tar zxf mysql-5.6.11.tar.gz
cd mysql-5.6.11
cmake . \
 -DCMAKE_INSTALL_PREFIX=/opt/app/mysql \
 -DMYSQL_DATADIR=/data/mysql \
 -DSYSCONFDIR=/etc \
 -DDEFAULT_CHARSET=utf8 \
 -DDEFAULT_COLLATION=utf8_general_ci
make
make install

/bin/mv -f /etc/my.cnf /etc/my.cnf.yongfu.bak
cd /opt/app/mysql
./scripts/mysql_install_db --user=mysql --basedir=/opt/app/mysql --datadir=/data/mysql
ln -s /opt/app/mysql/my.cnf /etc/my.cnf
cp ./support-files/mysql.server  /etc/rc.d/init.d/mysqld
chmod 755 /etc/init.d/mysqld
chkconfig mysqld on

echo 'basedir=/opt/app/mysql/' >> /etc/rc.d/init.d/mysqld
echo 'datadir=/data/mysql/' >>/etc/rc.d/init.d/mysqld
service mysqld start
echo 'export PATH=$PATH:/opt/app/mysql/bin' >> /etc/profile
ln -s /opt/app/mysql/lib /usr/lib/mysql
ln -s /opt/app/mysql/lib /usr/lib64/mysql
ln -s /opt/app/mysql/lib /opt/app/mysql/lib64
ln -s /opt/app/mysql/include /usr/include/mysql
ln -s /tmp/mysql.sock  /var/lib/mysql/mysql.sock

# 安装nginx
cd /opt/app/src
tar zxf nginx-1.4.1.tar.gz
cd nginx-1.4.1
./configure --prefix=/opt/app/nginx --with-google_perftools_module  --without-http_memcached_module --user=www --group=www --with-http_stub_status_module --with-pcre=/opt/app/src/pcre-8.32
make
make install
chmod  777 /tmp/tcmalloc -R
/opt/app/nginx/sbin/nginx
cp /opt/app/src/etc/nginx  /etc/rc.d/init.d/nginx
chmod 775 /etc/rc.d/init.d/nginx
chkconfig nginx on
/etc/rc.d/init.d/nginx restart

# re2c [安装php时依赖]
cd /opt/app/src
tar -zxf re2c-0.13.5.tar.gz
cd re2c-0.13.5
./configure
make
make install
cd ..
rm -rf re2c-0.13.5

# 安装php
cd /opt/app/src
tar -zxf php-5.3.25.tar.gz
cd php-5.3.25
./configure --prefix=/opt/app/php5 --with-mysql=mysqlnd --with-pdo-mysql=mysqlnd --with-gd --with-png-dir=/usr --with-jpeg-dir=/usr --with-freetype-dir=/usr --with-zlib --with-curlwrappers --with-gettext --with-openssl --with-mcrypt --with-curl --with-libxml-dir=/usr --with-gmp --with-xmlrpc  --with-libdir=lib64 --enable-bcmath --enable-shmop  --enable-fpm --enable-mbstring --enable-gd-native-ttf --enable-exif --enable-pcntl --enable-sockets --enable-zip --enable-soap  --enable-sysvmsg --enable-sysvshm --enable-sysvsem --without-sqlite --without-pear --disable-phar
make
make install
/bin/cp /opt/app/src/etc/php.ini /opt/app/php5/lib/php.ini
/bin/cp /opt/app/src/etc/php-fpm.conf /opt/app/php5/etc/php-fpm.conf
/bin/cp ./sapi/fpm/init.d.php-fpm  /etc/rc.d/init.d/php-fpm
chmod +x /etc/rc.d/init.d/php-fpm
chkconfig php-fpm on
mkdir -p /opt/app/php5/log

# 优化的默认配置
/bin/cp /opt/app/src/etc/nginx.conf  /opt/app/nginx/conf/nginx.conf
/bin/cp /opt/app/src/etc/rewrite.conf  /opt/app/nginx/conf/rewrite.conf
/bin/cp /opt/app/src/etc/mime.types  /opt/app/nginx/conf/mime.types
touch /dev/shm/php.socket
chown www.www /dev/shm/php.socket
/bin/cp /opt/app/src/etc/fcgi.conf /opt/app/nginx/conf/fcgi.conf
/bin/cp /opt/app/src/etc/localhost.conf /opt/app/nginx/conf/vhost/localhost.conf

# php扩展 memcache
cd /opt/app/src
tar zxf memcache-2.2.6.tgz
cd memcache-2.2.6
/opt/app/php5/bin/phpize
./configure  --with-php-config=/opt/app/php5/bin/php-config
make
make install

# php扩展 redis
cd /opt/app/src
tar zxf phpredis-master.tar.gz
cd phpredis-master
/opt/app/php5/bin/phpize
./configure --with-php-config=/opt/app/php5/bin/php-config
make
make install

# php扩展 apc
cd /opt/app/src
tar zxf APC-3.1.6.tgz
cd APC-3.1.6
/opt/app/php5/bin/phpize
./configure  --enable-apc --enable-apc-mmap --enable-apc-spinlocks --with-php-config=/opt/app/php5/bin/php-config
make
make install

# php扩展 xdebug
cd /opt/app/src
tar zxf xdebug-2.2.2.tgz
cd xdebug-2.2.2
/opt/app/php5/bin/phpize
./configure --enable-xdebug --with-php-config=/opt/app/php5/bin/php-config
make
make install

# 删除解压的文件目录
cd /opt/app/src
rm -rf php-5.3.25
rm -rf memcache-2.2.6 phpredis-master APC-3.1.6 xdebug-2.2.2
# nginx测试文件
cd /opt/app/nginx/html/
rm -rf /opt/app/nginx/html/*
/bin/cp /opt/app/src/etc/index.php  /opt/app/nginx/html/index.php
/bin/cp /opt/app/src/etc/gd.php  /opt/app/nginx/html/gd.php
/bin/cp /opt/app/src/etc/server.php  /opt/app/nginx/html/server.php
/bin/cp /opt/app/src/etc/phpinfo.php  /opt/app/nginx/html/phpinfo.php
chown www.www /opt/app/nginx/html/ -R
chmod 700 /opt/app/nginx/html/ -R

# 重启系统
shutdown -r now