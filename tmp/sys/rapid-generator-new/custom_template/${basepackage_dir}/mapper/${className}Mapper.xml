<#include "/macro.include"/>
<#assign className = table.className> <#assign classNameFirstLower =
table.classNameFirstLower>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro namespace>${className}.</#macro>

<!-- 
 	@description <#if table.baseds?? >${table.baseds}库 </#if> ${table.sqlName} 表 Mapper
 	@version  Ver 1.0
 	@author   xinxinjs
-->
<mapper namespace="${basepackage}.dto.${className}">
	
	<!-- 字段类型描述 -->
	<resultMap id="RM_${className}" type="${basepackage}.dto.${className}">
        <#list table.columns as column>
        	<#if column.isDateTimeColumn>
        		<result property="${column.columnNameLower}" column="${column.sqlName}" jdbcType="TIMESTAMP"/>
        	<#else>
        		<result property="${column.columnNameLower}" column="${column.sqlName}" jdbcType="${column.jdbcType}"/>
        	</#if>
		</#list>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
	    ]]>
	</sql>

	<!-- 新增数据 useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" <#if table.idColumn?? >useGeneratedKeys="true" keyProperty="${table.idColumn.columnNameFirstLower}"</#if>>
        INSERT INTO ${table.sqlName}
        <trim prefix="(" suffix=")" suffixOverrides="," >
        <#list table.columns as column>
           <#if column.isDateTimeColumn>
                <if test="${column.columnNameFirstLower} != null">
	         	${column.sqlName} <#if column_has_next>,</#if>
	       </if>
	       </#if>  
	       <#if column.isNumberColumn>
                <if test="${column.columnNameFirstLower} != null">
	         	${column.sqlName} <#if column_has_next>,</#if>
	         </if>
	       </#if>
	        <#if column.isStringColumn>
                <if test="${column.columnNameFirstLower} != null and ${column.columnNameFirstLower} != ''">
	         	${column.sqlName} <#if column_has_next>,</#if>
	         </if>
	       </#if>
        </#list>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides="," >
        <#list table.columns as column>
           <#if column.isDateTimeColumn>
                <if test="${column.columnNameFirstLower} != null">
	         	<@mapperEl column.columnNameFirstLower+",jdbcType=TIMESTAMP"/> <#if column_has_next>,</#if>
	       </if>
	       </#if>  
	       <#if column.isNumberColumn>
                <if test="${column.columnNameFirstLower} != null">
	         	<@mapperEl column.columnNameFirstLower+",jdbcType="+column.jdbcType/> <#if column_has_next>,</#if>
	         </if>
	       </#if>
	        <#if column.isStringColumn>
                <if test="${column.columnNameFirstLower} != null and ${column.columnNameFirstLower} != ''">
	         	<@mapperEl column.columnNameFirstLower+",jdbcType="+column.jdbcType/> <#if column_has_next>,</#if>
	         </if>
	       </#if>
        </#list>        
        </trim>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
	
    <!-- 根据主键更新 -->
	<update id="update" >
	    UPDATE  ${table.sqlName}
	    	<include refid="update_sql" />
	    <#if table.idColumn?? >
		    WHERE 
	        <#list table.compositeIdColumns as column>
	        	${column.sqlName} = <@mapperEl column.columnNameLower/> <#if column_has_next> AND </#if>
	        </#list>
	    <#else>
	    	<include refid="findCondition_where"/>
	    </#if>
	</update>

	<!-- 根据主键删除 -->
    <delete id="delete">
        DELETE FROM ${table.sqlName}
        <#if table.idColumn?? >
        	WHERE
	       	<#list table.compositeIdColumns as column>
	      		${column.sqlName} = <@mapperEl 'id'/> <#if column_has_next> AND </#if>
			</#list>
        <#else>
	    	<include refid="findCondition_where"/>
	    </#if>
    </delete>
    
   	<!-- 根据条件删除 -->
    <delete id="deleteByCondition">
        DELETE FROM ${table.sqlName} 
		<include refid="findCondition_where"/>
    </delete>
    
    <!-- 根据主键查询 -->
    <select id="getById" resultMap="RM_${className}">
		SELECT <include refid="columns" />
	    FROM ${table.sqlName}
	    <#if table.idColumn?? >
	       	WHERE 
			<#list table.compositeIdColumns as column>
	        ${column.sqlName} = <@mapperEl 'id'/> <#if column_has_next> AND </#if>
	        </#list>   
	    <#else>
	    	<include refid="findCondition_where"/>
	    </#if>
	</select>
	
	<!-- 根据条件查询数目 -->
    <select id="findCondition_count" resultType="long">
        SELECT count(1) FROM ${table.sqlName} 
		<include refid="findCondition_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findCondition" resultMap="RM_${className}">
    	SELECT <include refid="columns" />
	    FROM ${table.sqlName} 
		<include refid="findCondition_where"/>
    </select>
	
	<!-- 修改列 -->
	<sql id="update_sql">
         <set>
          <#list table.notPkColumns as column>
            <#if column.isDateTimeColumn>
                <if test="${column.columnNameFirstLower} != null">
	         	${column.sqlName} = <@mapperEl column.columnNameFirstLower+",jdbcType=TIMESTAMP"/> <#if column_has_next>,</#if>
	       </if>
	       </#if>  
	       <#if column.isNumberColumn>
                <if test="${column.columnNameFirstLower} != null">
	         	${column.sqlName} = <@mapperEl column.columnNameFirstLower+",jdbcType="+column.jdbcType/> <#if column_has_next>,</#if>
	         </if>
	       </#if>
	        <#if column.isStringColumn>
                <if test="${column.columnNameFirstLower} != null and ${column.columnNameFirstLower} != ''">
	         	${column.sqlName} = <@mapperEl column.columnNameFirstLower+",jdbcType="+column.jdbcType/> <#if column_has_next>,</#if>
	         </if>
	       </#if>
         </#list>  
       </set>
    </sql>
	
	<!-- 限定条件 -->
	<sql id="findCondition_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <#list table.columns as column>
	       <#if column.isDateTimeColumn>
		       <if test="${column.columnNameFirstLower}Begin != null">
					AND ${column.sqlName} >= <@mapperEl column.columnNameFirstLower+"Begin"+",jdbcType=TIMESTAMP"/>
			   </if>
			   <if test="${column.columnNameFirstLower}End != null">
					AND ${column.sqlName} &lt;= <@mapperEl column.columnNameFirstLower+"End"+",jdbcType=TIMESTAMP"/>
			   </if>
	       <#else>
	       <#if column.isNumberColumn>
               <if test="${column.columnNameFirstLower} != null">
		             AND ${column.sqlName} = <@mapperEl column.columnNameFirstLower+",jdbcType="+column.jdbcType/>
	           </if>
	       </#if>
	        <#if column.isStringColumn>
                <if test="${column.columnNameFirstLower} != null and ${column.columnNameFirstLower} !=''">
		             AND ${column.sqlName} = <@mapperEl column.columnNameFirstLower+",jdbcType="+column.jdbcType/>
	            </if>
	       </#if>
	       </#if>
	       </#list>			
		</where>
	</sql>
</mapper>

